[tool.poetry]
authors = ["Anja Virkkunen <anja.virkkunen@aalto.fi>"]
description = "Finnish Parliament Data Tools"
homepage = "https://github.com/aalto-speech/fi-parliament-tools"
keywords = ["aalto", "Finnish", "parliament", "eduskunta"]
license = "MIT"
name = "fi-parliament-tools"
readme = "README.md"
repository = "https://github.com/aalto-speech/fi-parliament-tools"
version = "0.0.0-alpha"

[tool.poetry.urls]
Changelog = "https://github.com/aalto-speech/fi-parliament-tools/releases"

[tool.poetry.dependencies]
aalto-asr-preprocessor = ">=2022.4.27"
alive-progress = ">=2.4.1"
atomicwrites = ">=1.4.0"
click = ">=8.1.3"
fasttext = ">=0.9.2"
lxml = ">=4.8.0"
pandas = ">=1.4.2"
python = "^3.8"
requests = ">=2.27.1"

[tool.poetry.dev-dependencies]
Pygments = ">=2.12.0"
black = ">=22.3"
coverage = {extras = ["toml"], version = ">=6.3"}
darglint = ">=1.8.0"
flake8 = ">=4.0.1"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2022.4.7"
mypy = ">=0.982"
pre-commit = ">=2.18.1"
pre-commit-hooks = ">=4.2.0"
pytest = ">=7.1.2"
pytest-mock = ">=3.7.0"
ruff = ">=0.0.258"
safety = ">=1.10.3"
sphinx = ">=4.5.0"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=4.0.3"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=1.0.0"}

[tool.poetry.scripts]
fi-parliament-tools = "fi_parliament_tools.__main__:main"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["fi_parliament_tools", "tests"]

[tool.coverage.report]
fail_under = 100
show_missing = true

[tool.mypy]
pretty = true
show_column_numbers = true
show_error_context = true
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "alive_progress",
  "lxml",
  "pandas",
]

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
  "tests",
]

[tool.ruff]
exclude = [
  ".mypy_cache",
  ".nox",
  ".ruff_cache",
  "dist",
]
ignore = [
  "B905",
  "E501",
  "S320"
]
line-length = 100
select = [
  "B",
  "B9",
  "C",
  "D",
  "E",
  "F",
  "I",
  "N",
  "S",
  "UP",
  "W",
]
src = ["src"]
target-version = "py38"

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
